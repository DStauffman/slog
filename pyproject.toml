[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "slog"
version = "0.9.1"
description = "Extends the built-in Python logging module with some convenient functions and custom log levels."
license = "LGPLv3"
authors = ["David C. Stauffer <dstauffman@yahoo.com>"]
maintainers = ["David C. Stauffer <dstauffman@yahoo.com>"]
readme = "README.rst"
repository = "https://github.com/DStauffman/slog"
keywords = ["packaging", "logging"]
classifiers = [
    "Topic :: Software Development",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
include = ["CHANGELOG.md", "LICENSE.txt", "pyproject.toml", "README.rst", "setup.cfg"]

[tool.poetry.dependencies]
python = ">=3.9, <3.11"
black = {version = "^22.0.0", optional = true}
flake8 = {version = "^4.0.1", optional = true}
isort = {version = "^5.9.3", optional = true}
mypy = {version = "^0.950", optional = true}
pylint = {version = "^2.0.0", optional = true}
pycodestyle = {version = "^2.8.0", optional = true}
pytest = {version = "^6.2.4", optional = true}
pytest-cov = {version = "^3.0.0", optional = true}

[tool.poetry.dev-dependencies]
pytest = "^6.2"
pytest-cov = "^3.0.0"

[tool.poetry.extras]
static = ["black", "flake8", "isort", "pycodestyle", "pylint", "mypy"]


[tool.poetry.scripts]
slog = "slog.cli:main"

[tool.black]
line-length = 88
target_version = ["py39"]

[tool.coverage.run]
branch = true
omit = ["*/site-packages/*", "*/.eggs/*"]
disable_warnings = ["couldnt-parse"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Create platform independent pragmas (potentially have the test runner modify this)
    #"pragma: noc unix",
    "pragma: noc windows",

    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    "def _main",

    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if False:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",

    # Don't complain about typing overloads
    "@overload"
]
ignore_errors = true

[tool.coverage.html]
directory = "coverage_html_report"

[tool.coverage.xml]
output = "coverage_html_report/coverage.xml"

[tool.isort]
py_version = 39
profile = "black"
line_length = 88
combine_as_imports = true
force_sort_within_sections = true
case_sensitive = true
force_alphabetical_sort_within_sections = true
skip_glob = ["__init__.py", "*/__init__.py"]

[tool.mypy]
show_error_codes       = true
warn_return_any        = true
warn_unused_configs    = true
warn_unreachable       = true
warn_unused_ignores    = true
disallow_untyped_calls = true
disallow_untyped_defs  = true
no_implicit_optional   = true
files                  = ["$MYPY_CONFIG_FILE_DIR/slog/**/*.py"]

[tool.pylint.messages_control]
max-line-length = 88
disable = ["C0103", "C0301", "C0411", "E0401", "E1101", "E0611", "R0401", "R0402", "R0801", "R0902", "R0903", "R0912", "R0913", "R0914", "R0915", "W0511", "W0702"]
ignore-paths = "^(.*[/\\\\]|)tests[/\\\\]test_.*$"

[tool.pydocstyle]
inherit = false
convention = "numpy"
add-ignore = ["D102", "D105", "D204"]
